{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { ofType, Effect } from '@ngrx/effects';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { GetProductsAction, ProductActionsType } from '../actions/products.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/services/products.service\";\nexport class ProductsEffect {\n  constructor(actions$, products_service) {\n    this.actions$ = actions$;\n    this.products_service = products_service;\n    this.loadAllProducts$ = this.actions$.pipe(ofType(ProductActionsType.GET_PRODUCTS), mergeMap(() => this.products_service.getAll().pipe(map(data => new GetProductsAction(data)))));\n  }\n\n}\n\nProductsEffect.ɵfac = function ProductsEffect_Factory(t) {\n  return new (t || ProductsEffect)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.ProductsService));\n};\n\nProductsEffect.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsEffect,\n  factory: ProductsEffect.ɵfac\n});\n\n__decorate([Effect()], ProductsEffect.prototype, \"loadAllProducts$\", void 0);","map":null,"metadata":{},"sourceType":"module"}
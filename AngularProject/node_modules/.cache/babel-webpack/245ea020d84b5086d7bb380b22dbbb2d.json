{"ast":null,"code":"import { ofType, createEffect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { switchMap, map, catchError, tap } from 'rxjs/operators';\nimport { AddOrderAction, AddOrderActionFail, AddOrderActionSuccess, GetOrdersList, GetOrdersListFail, GetOrdersListSuccess } from 'src/app/store/actions/order.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/order.service\";\nimport * as i2 from \"@ngrx/effects\";\nimport * as i3 from \"ngx-toastr\";\nexport let OrderEffects = /*#__PURE__*/(() => {\n  class OrderEffects {\n    constructor(order_service, actions$, toastr) {\n      this.order_service = order_service;\n      this.actions$ = actions$;\n      this.toastr = toastr;\n      this.AddOrder$ = createEffect(() => {\n        return this.actions$.pipe(ofType(AddOrderAction), switchMap(action => {\n          return this.order_service.addOrder(action.item).pipe(map(data => {\n            return AddOrderActionSuccess({\n              item: data\n            });\n          }), catchError(errorResp => {\n            return of(AddOrderActionFail({\n              message: errorResp.error.message\n            })).pipe(tap(() => {\n              this.toastr.error(errorResp.error.message);\n            }));\n          }));\n        }));\n      });\n      this.GetOrdersList$ = createEffect(() => {\n        return this.actions$.pipe(ofType(GetOrdersList), switchMap(() => {\n          return this.order_service.getOrdersList().pipe(map(data => {\n            return GetOrdersListSuccess({\n              orderAccount: data\n            });\n          }), catchError(errorResp => {\n            return of(GetOrdersListFail({\n              message: errorResp.error.message\n            })).pipe(tap(() => {\n              this.toastr.error(errorResp.error.message);\n            }));\n          }));\n        }));\n      });\n    }\n\n  }\n\n  OrderEffects.ɵfac = function OrderEffects_Factory(t) {\n    return new (t || OrderEffects)(i0.ɵɵinject(i1.OrderService), i0.ɵɵinject(i2.Actions), i0.ɵɵinject(i3.ToastrService));\n  };\n\n  OrderEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderEffects,\n    factory: OrderEffects.ɵfac\n  });\n  return OrderEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { ofType, createEffect } from '@ngrx/effects';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { AddOrderAction, AddOrderActionSuccess } from 'store/actions/order.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/order.service\";\nimport * as i2 from \"@ngrx/effects\";\nexport let OrderEffects = /*#__PURE__*/(() => {\n  class OrderEffects {\n    constructor(order_service, actions$) {\n      this.order_service = order_service;\n      this.actions$ = actions$;\n      this.AddOrder$ = createEffect(() => {\n        return this.actions$.pipe(ofType(AddOrderAction), mergeMap(action => {\n          console.log(action.user_id);\n          return this.order_service.addOrder(action.item, action.user_id).pipe(map((data, id) => {\n            return AddOrderActionSuccess({\n              item: data,\n              user_id: id\n            });\n          }));\n        }));\n      });\n    }\n\n  }\n\n  OrderEffects.ɵfac = function OrderEffects_Factory(t) {\n    return new (t || OrderEffects)(i0.ɵɵinject(i1.OrderService), i0.ɵɵinject(i2.Actions));\n  };\n\n  OrderEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderEffects,\n    factory: OrderEffects.ɵfac\n  });\n  return OrderEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { GetProductsAction, GetSingleProductActionFail, GetSingleProductActionSuccess, ProductsTypeAction, ProductsTypeActionFail, ProductsTypeActionSuccess } from '../actions/products.actions';\nimport { initialProductsState } from '../state/app.state';\nimport { createReducer, on } from '@ngrx/store';\n\nconst _productsReducer = createReducer(initialProductsState, on(ProductsTypeAction, (state, action) => {\n  return Object.assign(Object.assign({}, state), {\n    loading: false\n  });\n}), on(ProductsTypeActionSuccess, (state, action) => {\n  return Object.assign(Object.assign({}, state), {\n    products: action.products\n  });\n}), on(ProductsTypeActionFail, (state, action) => {\n  return Object.assign(Object.assign({}, state), {\n    message: action.message\n  });\n}), on(GetProductsAction, (state, action) => {\n  return Object.assign(Object.assign({}, state), {\n    products: action.products\n  });\n}), on(GetSingleProductActionSuccess, (state, action) => {\n  return Object.assign(Object.assign({}, state), {\n    products: action.products,\n    loading: true\n  });\n}), on(GetSingleProductActionFail, (state, action) => {\n  return Object.assign(Object.assign({}, state), {\n    message: action.message\n  });\n}));\n\nexport function productsReducer(state, action) {\n  return _productsReducer(state, action);\n}\n;","map":null,"metadata":{},"sourceType":"module"}
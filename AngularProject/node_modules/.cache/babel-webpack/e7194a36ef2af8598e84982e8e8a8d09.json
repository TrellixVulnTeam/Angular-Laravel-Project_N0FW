{"ast":null,"code":"import { ofType, createEffect } from '@ngrx/effects';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { UserSignUpAction, UserSignUpActionSuccess } from \"store/actions/user.action\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/services/user.service\";\nexport let UserEffects = /*#__PURE__*/(() => {\n  class UserEffects {\n    constructor(actions$, user_service) {\n      this.actions$ = actions$;\n      this.user_service = user_service;\n      this.UserSignUp$ = createEffect(() => {\n        console.log('schifo');\n        return this.actions$.pipe(ofType(UserSignUpAction), mergeMap(action => {\n          return this.user_service.signUp(action.user).pipe(map(data => {\n            return UserSignUpActionSuccess({\n              user: data\n            });\n          }));\n        }));\n      });\n    }\n\n  }\n\n  UserEffects.ɵfac = function UserEffects_Factory(t) {\n    return new (t || UserEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.UserService));\n  };\n\n  UserEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserEffects,\n    factory: UserEffects.ɵfac\n  });\n  return UserEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}